name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'server/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: games_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Run linting
      working-directory: ./server
      run: npm run lint

    - name: Run formatting check
      working-directory: ./server
      run: npx prettier --check "src/**/*.ts" "test/**/*.ts"

    - name: Run unit tests
      working-directory: ./server
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASS: postgres
        DATABASE_NAME: games_db_test
        JWT_SECRET: test_secret_key
        JWT_EXPIRES_IN: 1h
      run: npm run test:cov

    - name: Run e2e tests
      working-directory: ./server
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USER: postgres
        DATABASE_PASS: postgres
        DATABASE_NAME: games_db_test
        JWT_SECRET: test_secret_key
        JWT_EXPIRES_IN: 1h
      run: npm run test:e2e

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./server/coverage/lcov.info
        flags: backend
        name: backend-coverage
        working-directory: ./server

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Build application
      working-directory: ./server
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: server/dist/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Run security audit
      working-directory: ./server
      run: npm audit --audit-level=moderate

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        working-directory: ./server

  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      working-directory: ./server
      run: npm ci

    - name: Check for outdated dependencies
      working-directory: ./server
      run: npm outdated

    - name: Create Dependabot PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: update dependencies'
        body: |
          This PR updates outdated dependencies in the backend.
          
          Generated by GitHub Actions.
        branch: dependabot/backend-updates
        delete-branch: true
