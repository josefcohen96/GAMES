version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: games-postgres
    environment:
      POSTGRES_DB: games_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Queries:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: builder
    container_name: games-backend
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASS: 1234
      DATABASE_NAME: games_db
      JWT_SECRET: your_secret_key
      JWT_EXPIRES_IN: 1h
      CORS_ORIGIN: http://localhost:5173
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run start:dev

  # Frontend (if needed for full stack development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: games-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  postgres_data:
